class Solution {
public:
    int search(vector<int>& nums, int target) {
        int minElementIndex = findMinElementIndex(nums, target);
        return minElementIndex;
    }

    int findMinElementIndex(vector<int> &nums, int target){

        int start = 0;
        int end = nums.size()-1;

        while(start <= end){
            int mid = start + (end-start)/2;
            if(nums[mid] == target){
                return mid;
            }
            int leftMid = nums[(nums.size()+mid-1)%nums.size()];
            int rightMid = nums[(mid+1)%nums.size()];
            
            if(target == leftMid){
                return (nums.size()+mid-1)%nums.size();
            }
            if(target == rightMid){
                
                return (mid+1)%nums.size();
            } 
            
            if((nums[start] <= nums[mid] && nums[start] > nums[end])){
                if(target >=nums[start] && target <= nums[mid]){
                    end = mid-1;
                }
                else
                    start = mid+1;
            }
            else if(nums[mid]<=nums[end] && nums[start] > nums[end]){
                if(target >=nums[mid] && target<=nums[end]){
                    start=mid+1;
                }
                else{
                    end = mid-1;
                }
            }
            else {
                if(target > nums[mid]){
                    start = mid+1;
                }
                else{
                     end = mid-1;
                }
            }
            
        }
        return -1;
    }
};
