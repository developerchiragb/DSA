class Solution {
public:
    int calculateMax(vector<int> &piles){
        int maxi = INT_MIN;
        for(int i=0;i<piles.size();i++){
            if(piles[i] > maxi){
                maxi = piles[i];
            }
        }
        return maxi;
    }

    long calculateNoOfBananas(vector<int> &piles, int hourly){
        long totalH = 0;
        for(int i=0;i<piles.size();i++){
            totalH+=ceil((double)(piles[i])/(double)(hourly));
        }
        return totalH;
    }

    int minEatingSpeed(vector<int>& piles, int h) {
        int start = 1, end = calculateMax(piles);
        int ans = -1;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(calculateNoOfBananas(piles,mid) <= h){
                ans = mid;
                end = mid-1;
            }
            else{
                start = mid+1;
            }
        }    
        return ans;
    }
};
